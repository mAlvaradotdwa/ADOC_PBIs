expression FACT_TUNGYA =
		let
		    Consulta1 = Value.NativeQuery(SapHana.Database("vhadoahpdb01.hec.empresasadoc.com:30215", [Implementation="2.0"]), "WITH NAST_RANKED AS (#(lf)    SELECT #(lf)        OBJKY, #(lf)        DATVR,#(lf)        ROW_NUMBER() OVER (PARTITION BY OBJKY ORDER BY DATVR ASC) AS rn#(lf)    FROM SAP_ECC.NAST#(lf)    WHERE VSTAT = '1'#(lf)    AND ERDAT >= '20230101'#(lf))#(lf)SELECT#(lf)    ZTUNGYA_MK_UPD.EBELN as Doc_compra,#(lf)    --EKPO_KONNR.LBELN AS Nro_Expediente,#(lf)    EKKO_EBELN.BUKRS as Entidad_Compra,#(lf)    EKKO_EBELN.EKORG as Entidad_Solicitante,#(lf)    EKKO_EBELN.ZZ_CENTRO_D as Entidad_CD,#(lf)    EKKO_EBELN.BSART as Tipo_Doc,#(lf)    ZTUNGYA_MK_UPD.TXZ01 Text_Breve,#(lf)    CASE WHEN LEFT(ZTUNGYA_MK_UPD.TXZ01, 7) = 'Prepack' THEN CAST(SUBSTRING_REGEXPR('(\d+)' IN ZTUNGYA_MK_UPD.TXZ01 GROUP 1) AS INTEGER) ELSE 1 END * ZTUNGYA_MK_UPD.QTY_BOOKED AS CANTIDAD_PARES,#(lf)    SUBSTRING(ZTUNGYA_MK_UPD.TXZ01, 1, INSTR(ZTUNGYA_MK_UPD.TXZ01, ',') - 1) AS Estilo_Color,#(lf)    ZTUNGYA_MK_UPD.MATNR,#(lf)    MARA.SATNR,#(lf)    MARA.GROES AS ESTILO,#(lf)    MARA.FREE_CHAR AS COLOR,#(lf)    MARA.BRAND_ID AS MARCA,#(lf)    MARA.ZZ_ART_PROV AS GENERO,#(lf)    MARA.ZZ_DEPART AS DEPARTAMENTO,#(lf)    MARA.SAISO AS PE,#(lf)    MARA.MEINS AS UNIDAD,#(lf)    EKPO_EBELN.BRTWR AS PrecioBruto_PO,#(lf)    EKKO_EBELN.AEDAT AS Fecha_Creacion,#(lf)    EKKO_EBELN.BEDAT AS Fecha_Documento,#(lf)    NAST.DATVR AS Fecha_Liberacion,#(lf)    NAST.VSTAT AS Estatus,#(lf)    EKPO_EBELN.ZFACTORY AS Fecha_Xfactory_Original,#(lf)    EKPO_EBELN.ZFACTORYO AS Fecha_Xfactory_Actualizada,#(lf)    EKKO_EBELN.ZZF_DESPACHO AS Fecha_Despacho,#(lf)    ZTUNGYA_MK_UPD.NBOOKING as Nro_booking,#(lf)    ZTUNGYA_MK_UPD.BOOKING_DATE AS Fecha_Booking,#(lf)    ZTUNGYA_MK_UPD.QTY_BOOKED as Cantidad_Booking,#(lf)    ZTUNGYA_MK_UPD.CARGO_READY_DATE,#(lf)    ZTUNGYA_MK_UPD.DATE_ARRIVAL as Fecha_arrival_CFS,#(lf)    ZTUNGYA_MK_UPD.HOUSE_BILL,#(lf)    ZTUNGYA_MK_UPD.INVOICE_NUMBER AS Nro_factura,#(lf)    ZTUNGYA_MK_UPD.ETD,#(lf)    ZTUNGYA_MK_UPD.ETA,#(lf)    --EKPO_KONNR.FECHA_LIQ #(lf)    '' as Fecha_Liq,#(lf)    ZMM_EXPED_IMP.FECHA_CIERRE AS Fecha_Liquidacion,#(lf)    ZTUNGYA_MK_UPD.PORT,#(lf)    EKKO_EBELN.INCO2 AS PUERTO_NOMBRE,#(lf)    ZTUNGYA_MK_UPD.LAND1,#(lf)    ZTUNGYA_MK_UPD.ARRIVAL_VESSEL,#(lf)    ZTUNGYA_MK_UPD.CONTAINER AS Contenedor,#(lf)    EKKO_EBELN.ZZ_TIPO_FLETE AS Modalidad_Despacho,#(lf)    ZTUNGYA_MK_UPD.UP_DATE,#(lf)    ZTUNGYA_MK_UPD.LOEKZ,#(lf)    ZTUNGYA_MK_UPD.ZIMP,#(lf)    ZTUNGYA_MK_UPD.LBELN,#(lf)    EKKO_EBELN.LIFNR AS Codigo_Proveedor#(lf)FROM SAP_ECC.ZTUNGYA_MK_UPD#(lf)LEFT JOIN SAP_ECC.MARA#(lf)ON ZTUNGYA_MK_UPD.MATNR = MARA.MATNR#(lf)LEFT JOIN SAP_ECC.EKKO AS EKKO_KONNR#(lf)ON ZTUNGYA_MK_UPD.EBELN = EKKO_KONNR.KONNR#(lf)LEFT JOIN SAP_ECC.EKKO AS EKKO_EBELN#(lf)ON ZTUNGYA_MK_UPD.EBELN = EKKO_EBELN.EBELN#(lf)--LEFT JOIN SAP_ECC.EKPO AS EKPO_KONNR#(lf)--ON ZTUNGYA_MK_UPD.EBELN = EKPO_KONNR.KONNR AND EKPO_KONNR.MATNR = ZTUNGYA_MK_UPD.MATNR#(lf)LEFT JOIN SAP_ECC.EKPO AS EKPO_EBELN#(lf)ON ZTUNGYA_MK_UPD.EBELN = EKPO_EBELN.EBELN AND EKPO_EBELN.MATNR = ZTUNGYA_MK_UPD.MATNR#(lf)LEFT JOIN SAP_ECC.ZMM_EXPED_IMP#(lf)ON ZTUNGYA_MK_UPD.LBELN = ZMM_EXPED_IMP.LBELN#(lf)LEFT JOIN SAP_ECC.NAST#(lf)ON ZTUNGYA_MK_UPD.EBELN = NAST.OBJKY#(lf) AND NAST.DATVR = (#(lf)    SELECT DATVR FROM NAST_RANKED WHERE OBJKY = NAST.OBJKY AND rn = 1#(lf))#(lf)WHERE ZTUNGYA_MK_UPD.LOEKZ <> 'L'#(lf)AND EKPO_EBELN.LOEKZ <> 'L'#(lf)AND EKPO_EBELN.RETPO <> 'X'#(lf)--AND EKPO_KONNR.LOEKZ <> 'L'#(lf)--AND EKPO_KONNR.RETPO <> 'X'#(lf)--AND ZTUNGYA_MK_UPD.EBELN = '4400050494'", null, [EnableFolding=true]),
		    #"Valor reemplazado" = Table.ReplaceValue(Consulta1,"00000000","",Replacer.ReplaceText,{"FECHA_CREACION", "FECHA_DOCUMENTO", "FECHA_XFACTORY_ORIGINAL", "FECHA_XFACTORY_ACTUALIZADA", "FECHA_DESPACHO", "FECHA_BOOKING", "CARGO_READY_DATE", "FECHA_ARRIVAL_CFS", "ETD", "ETA", "FECHA_LIQ", "FECHA_LIQUIDACION", "UP_DATE"}),
		    #"Tipo cambiado" = Table.TransformColumnTypes(#"Valor reemplazado",{{"ETA", type date}, {"FECHA_BOOKING", type date}, {"CARGO_READY_DATE", type date}, {"FECHA_CREACION", type date}, {"FECHA_XFACTORY_ACTUALIZADA", type date}, {"FECHA_XFACTORY_ORIGINAL", type date}, {"FECHA_DOCUMENTO", type date}, {"FECHA_ARRIVAL_CFS", type date}, {"ETD", type date}, {"UP_DATE", type date}, {"FECHA_DESPACHO", type date}, {"FECHA_LIQUIDACION", type date}}),
		    #"Valor reemplazado1" = Table.ReplaceValue(#"Tipo cambiado","216","206",Replacer.ReplaceText,{"PORT"}),
		    #"Consultas combinadas" = Table.NestedJoin(#"Valor reemplazado1", {"PORT"}, PUERTO_ORIGEN, {"Code"}, "PUERTO_ORIGEN", JoinKind.LeftOuter),
		    #"Se expandió PUERTO_ORIGEN" = Table.ExpandTableColumn(#"Consultas combinadas", "PUERTO_ORIGEN", {"Name Country", "Tipo Linea"}, {"PUERTO_ORIGEN.Name Country", "PUERTO_ORIGEN.Tipo Linea"}),
		    #"Consultas combinadas1" = Table.NestedJoin(#"Se expandió PUERTO_ORIGEN", {"DOC_COMPRA"}, NAST, {"OBJKY"}, "NAST", JoinKind.LeftOuter),
		    #"Se expandió NAST" = Table.ExpandTableColumn(#"Consultas combinadas1", "NAST", {"FECHA_CREACION", "FECHA_LIBERACION"}, {"NAST.FECHA_CREACION", "NAST.FECHA_LIBERACION"}),
		    #"Columnas quitadas" = Table.RemoveColumns(#"Se expandió NAST",{"NAST.FECHA_CREACION"}),
		    #"Se cambió formato a fecha" = Table.TransformColumnTypes(#"Columnas quitadas",{{"FECHA_LIBERACION", type date}}),
		    // 2/12/2003 por 2/12/2023
		    #"Valor reemplazado2 CRD" = Table.ReplaceValue(#"Se cambió formato a fecha",#date(2003, 11, 5),#date(2023, 11, 5),Replacer.ReplaceValue,{"CARGO_READY_DATE"}),
		    // 5/11/2003 por 5/11/2023
		    #"Valor reemplazado3 CRD" = Table.ReplaceValue(#"Valor reemplazado2 CRD",#date(2003, 12, 2),#date(2023, 12, 2),Replacer.ReplaceValue,{"CARGO_READY_DATE"}),
		    #"Tipo cambiado1" = Table.TransformColumnTypes(#"Valor reemplazado3 CRD",{{"FECHA_LIQ", type date}})
		in
		    #"Tipo cambiado1"
	lineageTag: 51fe2c78-7eda-485f-ac7a-a0ad46a7f72c

	annotation PBI_NavigationStepName = Navegación

	annotation PBI_ResultType = Exception

expression Parámetro1 = #"Archivo de ejemplo" meta [IsParameterQuery=true, BinaryIdentifier=#"Archivo de ejemplo", Type="Binary", IsParameterQueryRequired=true]
	lineageTag: 23700bf7-78ba-4718-98cb-8a3e6d2f337c
	queryGroup: 'Transformar archivo de ALMACENES\Consultas auxiliares'

	annotation PBI_ResultType = Binary

expression 'Transformar archivo de ejemplo' =
		let
		    Origen = Excel.Workbook(Parámetro1, null, true),
		    Hoja1_Sheet = Origen{[Item="Hoja1",Kind="Sheet"]}[Data]
		in
		    Hoja1_Sheet
	lineageTag: 06b442df-2741-4c81-a867-1ddad9986342
	queryGroup: 'Transformar archivo de ALMACENES'

	annotation PBI_ResultType = Table

expression 'Archivo de ejemplo' =
		let
		    Origen = SharePoint.Files("https://empresasadoc-my.sharepoint.com/personal/luis_menendez_empresasadoc_com", [ApiVersion = 15]),
		    #"Filas filtradas" = Table.SelectRows(Origen, each ([Extension] = ".xlsx") and ([Name] = "Almacenes.xlsx")),
		    Navegación1 = #"Filas filtradas"{0}[Content]
		in
		    Navegación1
	lineageTag: 2e0f415f-121f-4b30-b93f-f63cd128d9d0
	queryGroup: 'Transformar archivo de ALMACENES\Consultas auxiliares'

	annotation PBI_NavigationStepName = Navegación

	annotation PBI_ResultType = Binary

expression 'Transformar archivo' =
		let
		    Origen = (Parámetro1 as binary) => let
		    Origen = Excel.Workbook(Parámetro1, null, true),
		    Hoja1_Sheet = Origen{[Item="Hoja1",Kind="Sheet"]}[Data]
		in
		    Hoja1_Sheet
		in
		    Origen
	mAttributes: [ FunctionQueryBinding = "{""exemplarFormulaName"":""Transformar archivo de ejemplo""}" ]
	lineageTag: db39c337-60dc-4c81-b294-7ae3ffd59d21
	queryGroup: 'Transformar archivo de ALMACENES\Consultas auxiliares'

	annotation PBI_ResultType = Function

expression Parámetro2 = #"Archivo de ejemplo (2)" meta [IsParameterQuery=true, BinaryIdentifier=#"Archivo de ejemplo (2)", Type="Binary", IsParameterQueryRequired=true]
	lineageTag: d93d4623-27b7-46c3-a328-6627af2b70b2
	queryGroup: 'Transformar archivo de ALMACENES (2)\Consultas auxiliares'

	annotation PBI_ResultType = Binary

expression 'Transformar archivo de ejemplo (2)' =
		let
		    Origen = Excel.Workbook(Parámetro2, null, true),
		    Hoja1_Sheet = Origen{[Item="Hoja1",Kind="Sheet"]}[Data]
		in
		    Hoja1_Sheet
	lineageTag: 848e9bd5-a943-43c3-afe8-e5a2f540ee46
	queryGroup: 'Transformar archivo de ALMACENES (2)'

	annotation PBI_ResultType = Table

expression 'Archivo de ejemplo (2)' =
		let
		    Origen = SharePoint.Files("https://empresasadoc-my.sharepoint.com/personal/luis_menendez_empresasadoc_com", [ApiVersion = 15]),
		    #"Filas filtradas" = Table.SelectRows(Origen, each ([Extension] = ".xlsx") and ([Name] = "Almacenes.xlsx")),
		    Navegación1 = #"Filas filtradas"{0}[Content]
		in
		    Navegación1
	lineageTag: 87d2c9b7-abb5-4f36-8ffb-c779581025a1
	queryGroup: 'Transformar archivo de ALMACENES (2)\Consultas auxiliares'

	annotation PBI_NavigationStepName = Navegación

	annotation PBI_ResultType = Binary

expression 'Transformar archivo (2)' =
		let
		    Origen = (Parámetro2 as binary) => let
		    Origen = Excel.Workbook(Parámetro2, null, true),
		    Hoja1_Sheet = Origen{[Item="Hoja1",Kind="Sheet"]}[Data]
		in
		    Hoja1_Sheet
		in
		    Origen
	mAttributes: [ FunctionQueryBinding = "{""exemplarFormulaName"":""Transformar archivo de ejemplo (2)""}" ]
	lineageTag: e129eca6-fa40-45bb-b33d-c4f73f27f09a
	queryGroup: 'Transformar archivo de ALMACENES (2)\Consultas auxiliares'

	annotation PBI_ResultType = Function

expression 'FACT_TUNGYA_Valor reemplazado2 CRD_Counters_2025-07-09_17:13' = ```
		let
		    TransformCsv = (filecontents as binary) => [
		        Source = Csv.Document(filecontents,[Delimiter=",", Columns=9, Encoding=1252, QuoteStyle=QuoteStyle.None]),
		        result = Table.PromoteHeaders(Source, [PromoteAllScalars=true])
		    ][result],
		    CsvFiles = #table(type table[Id = text, File = text], {
		        {"1.1", "C:\Users\luis.menendez\Microsoft\Power BI Desktop Store App\Traces\Diagnostics\EvaluationCounters_20250709T171322.875-0ee6fe7c-4aec-4f04-bb41-4b0393231286-1-001.csv"}
		    }),
		    GetContents = Table.AddColumn(CsvFiles, "Content", each File.Contents([File])),
		    AddColumn = Table.AddColumn(GetContents, "Transform File", each TransformCsv([Content])),
		    ExpandedTransformFile = Table.ExpandTableColumn(AddColumn, "Transform File", 
		                { "Timestamp", "Processor Time (%)", "Total Processor Time", "IO Data Bytes Per Second", "Commit (bytes)", "Working Set (bytes)" },
		                { "Timestamp", "Processor Time (%)", "Total Processor Time", "IO Data Bytes Per Second", "Commit (bytes)", "Working Set (bytes)" }),
		    TransformedColumns = Table.TransformColumnTypes(ExpandedTransformFile,
		        {{"Timestamp", type datetime}, {"Processor Time (%)", Percentage.Type}, {"Total Processor Time", type duration}, {"IO Data Bytes Per Second", type number}, {"Commit (bytes)", Int64.Type}, {"Working Set (bytes)", Int64.Type}}),
		    RemovedColumns = Table.RemoveColumns(TransformedColumns, {"File", "Content"})
		in
		    RemovedColumns
		```
	lineageTag: b75d8968-292f-4d68-bead-da1431fb713c
	queryGroup: Diagnóstico

expression 'FACT_TUNGYA_Valor reemplazado2 CRD_Detailed_2025-07-09_17:13' = ```
		let
		    Source = Json.Document(File.Contents("C:\Users\luis.menendez\Microsoft\Power BI Desktop Store App\Traces\Diagnostics\Diagnostics_Detailed_20250709T171322.882-f692def4-710b-485d-adfc-53966194bf39.json")),
		    #"Converted to Table" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
		    #"Expanded Column1" = Table.ExpandRecordColumn(#"Converted to Table", "Column1",
		        {"Id", "Query", "Step", "Category", "DataSourceKind", "Operation", "StartTime", "EndTime", "ExclusiveDurationPct", "ExclusiveDuration", "Resource", "DataSourceQuery", "AdditionalInfo", "RowCount", "ContentLength", "IsUserQuery", "Path", "GroupId", "PartitionKey", "Process", "ActivityId", "DataSourceOperationIds"},
		        {"Id", "Query", "Step", "Category", "Data Source Kind", "Operation", "Start Time", "End Time", "Exclusive Duration (%)", "Exclusive Duration", "Resource", "Data Source Query", "Additional Info", "Row Count", "Content Length", "Is User Query", "Path", "Group Id", "Partition Key", "Process", "Activity Id", "Data Source Operation Identifiers"}),
		    #"Changed Type" = Table.TransformColumnTypes(#"Expanded Column1", 
		        {{"Id", type text}, {"Query", type text}, {"Step", type text}, {"Category", type text}, {"Data Source Kind", type text}, {"Operation", type text}, {"Start Time", type datetime}, {"End Time", type datetime}, {"Exclusive Duration (%)", Percentage.Type}, {"Exclusive Duration", type duration}, {"Resource", type text}, {"Data Source Query", type text}, {"Additional Info", type any}, {"Row Count", Int64.Type}, {"Content Length", Int64.Type}, {"Is User Query", type logical}, {"Path", type text}, {"Group Id", type number}, {"Partition Key", type text}, {"Process", type text}, {"Activity Id", type text}, {"Data Source Operation Identifiers", type any}})
		in
		    #"Changed Type"
		```
	lineageTag: cff7861c-24ef-4d87-abb4-5c647252698d
	queryGroup: Diagnóstico

expression 'FACT_TUNGYA_Valor reemplazado2 CRD_Aggregated_2025-07-09_17:13' = ```
		let
		    Source = Json.Document(File.Contents("C:\Users\luis.menendez\Microsoft\Power BI Desktop Store App\Traces\Diagnostics\Diagnostics_Aggregated_20250709T171322.882-f692def4-710b-485d-adfc-53966194bf39.json")),
		    #"Converted to Table" = Table.FromList(Source, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
		    #"Expanded Column1" = Table.ExpandRecordColumn(#"Converted to Table", "Column1",
		        {"Id", "Query", "Step", "Category", "DataSourceKind", "Operation", "StartTime", "EndTime", "ExclusiveDurationPct", "ExclusiveDuration", "Resource", "DataSourceQuery", "AdditionalInfo", "RowCount", "ContentLength", "IsUserQuery", "Path", "GroupId", "PartitionKey"},
		        {"Id", "Query", "Step", "Category", "Data Source Kind", "Operation", "Start Time", "End Time", "Exclusive Duration (%)", "Exclusive Duration", "Resource", "Data Source Query", "Additional Info", "Row Count", "Content Length", "Is User Query", "Path", "Group Id", "Partition Key"}),
		    #"Changed Type" = Table.TransformColumnTypes(#"Expanded Column1", 
		        {{"Id", type text}, {"Query", type text}, {"Step", type text}, {"Category", type text}, {"Data Source Kind", type text}, {"Operation", type text}, {"Start Time", type datetime}, {"End Time", type datetime}, {"Exclusive Duration (%)", Percentage.Type}, {"Exclusive Duration", type duration}, {"Resource", type text}, {"Data Source Query", type text}, {"Additional Info", type any}, {"Row Count", Int64.Type}, {"Content Length", Int64.Type}, {"Is User Query", type logical}, {"Path", type text}, {"Group Id", type number}, {"Partition Key", type text}})
		in
		    #"Changed Type"
		```
	lineageTag: a0553d6f-0d7e-4e4d-9e49-c6f0ea71f6c3
	queryGroup: Diagnóstico

expression Pasos =
		let
		    Origen = Excel.Workbook(Web.Contents("https://empresasadoc-my.sharepoint.com/personal/no-reply_empresasadoc_com/Documents/TEMP_Sharepoint/Lead%20Time%20para%20Modelo%20Panama.xlsx"), null, true),
		    #"Tiempos L1_Sheet" = Origen{[Item="Pasos",Kind="Sheet"]}[Data],
		    #"Encabezados promovidos" = Table.PromoteHeaders(#"Tiempos L1_Sheet", [PromoteAllScalars=true])
		in
		    #"Encabezados promovidos"
	lineageTag: 6dd434de-40ad-4ac9-bb28-3dfbeeb6842e
	queryGroup: 'Base LeadTimes'

	annotation PBI_NavigationStepName = Navegación

	annotation PBI_ResultType = Table

expression _inbound =
		let
		    Origen = Excel.Workbook(Web.Contents("https://empresasadoc-my.sharepoint.com/personal/no-reply_empresasadoc_com/Documents/TEMP_Sharepoint/Lead%20Time%20para%20Modelo%20Panama.xlsx"), null, true),
		    #"Tiempos Inbound_Sheet" = Origen{[Item="Tiempos Inbound",Kind="Sheet"]}[Data],
		    #"Encabezados promovidos" = Table.PromoteHeaders(#"Tiempos Inbound_Sheet", [PromoteAllScalars=true]),
		    #"Columna de anulación de dinamización" = Table.UnpivotOtherColumns(#"Encabezados promovidos", {"Modalidad", "Origen"}, "Atributo", "Valor"),
		    #"Columnas con nombre cambiado" = Table.RenameColumns(#"Columna de anulación de dinamización",{{"Atributo", "Actividad"}, {"Valor", "LT"}}),
		    #"Consultas combinadas" = Table.NestedJoin(#"Columnas con nombre cambiado", {"Actividad"}, Pasos, {"Paso"}, "Pasos", JoinKind.LeftOuter),
		    #"Se expandió Pasos" = Table.ExpandTableColumn(#"Consultas combinadas", "Pasos", {"ID"}, {"ID"}),
		    #"Personalizada agregada" = Table.AddColumn(#"Se expandió Pasos", "Tipo", each "Import")
		in
		    #"Personalizada agregada"
	lineageTag: f1f839ab-2b75-4a10-9a19-a989495bfc19
	queryGroup: 'Base LeadTimes'

	annotation PBI_NavigationStepName = Navegación

	annotation PBI_ResultType = Table

expression _export =
		let
		    Origen = Excel.Workbook(Web.Contents("https://empresasadoc-my.sharepoint.com/personal/no-reply_empresasadoc_com/Documents/TEMP_Sharepoint/Lead%20Time%20para%20Modelo%20Panama.xlsx"), null, true),
		    #"Tiempos Export_Sheet" = Origen{[Item="Tiempos Export",Kind="Sheet"]}[Data],
		    #"Encabezados promovidos" = Table.PromoteHeaders(#"Tiempos Export_Sheet", [PromoteAllScalars=true]),
		    #"Columna de anulación de dinamización" = Table.UnpivotOtherColumns(#"Encabezados promovidos", {"Tipo", "Descripción"}, "Atributo", "Valor"),
		    #"Columnas con nombre cambiado" = Table.RenameColumns(#"Columna de anulación de dinamización",{{"Atributo", "BV_PAIS"}, {"Valor", "LT"}, {"Descripción", "Actividad"}}),
		    #"Consultas combinadas" = Table.NestedJoin(#"Columnas con nombre cambiado", {"Actividad"}, Pasos, {"Paso"}, "Pasos", JoinKind.LeftOuter),
		    #"Se expandió Pasos" = Table.ExpandTableColumn(#"Consultas combinadas", "Pasos", {"ID"}, {"ID"}),
		    #"Personalizada agregada" = Table.AddColumn(#"Se expandió Pasos", "Tipo.1", each "Export")
		in
		    #"Personalizada agregada"
	lineageTag: c95538b6-7384-4894-b6c6-a6803753ab61
	queryGroup: 'Base LeadTimes'

	annotation PBI_NavigationStepName = Navegación

	annotation PBI_ResultType = Table

expression Origen-Destino = ```
		let
		    Origen = _inbound,
		    #"Columnas quitadas" = Table.RemoveColumns(Origen,{"Actividad", "LT", "ID", "Tipo"}),
		    #"Duplicados quitados" = Table.Distinct(#"Columnas quitadas"),
		    #"Personalizada agregada" = Table.AddColumn(#"Duplicados quitados", "CampoOrigen", each 1),
		    inbound = Table.AddColumn(#"Personalizada agregada", "flag", each 1),
		    OrigenOutbound = _export,
		    #"Otras columnas quitadas" = Table.SelectColumns(OrigenOutbound,{"BV_PAIS"}),
		    #"Duplicados quitados1" = Table.Distinct(#"Otras columnas quitadas"),
		    #"Personalizada agregada2" = Table.AddColumn(#"Duplicados quitados1", "CampoDestino", each 1),
		    outbound = Table.AddColumn(#"Personalizada agregada2", "flag", each 1),
		    join = Table.NestedJoin ( inbound , {"flag"} , outbound , {"flag"} , "combine" , JoinKind.LeftOuter ),
		    #"Se expandió combine" = Table.ExpandTableColumn(join, "combine", {"BV_PAIS", "CampoDestino"}, {"BV_PAIS", "CampoDestino"}),
		    #"Columnas con nombre cambiado" = Table.RenameColumns(#"Se expandió combine",{{"BV_PAIS", "Destino"}}),
		    #"Columnas reordenadas" = Table.ReorderColumns(#"Columnas con nombre cambiado",{"Modalidad", "Origen", "Destino", "CampoOrigen", "flag", "CampoDestino"}) 
		in
		    #"Columnas reordenadas"
		```
	lineageTag: 2326a0d5-8c2d-4867-bd67-c4a000339640
	queryGroup: 'Base LeadTimes'

	annotation PBI_NavigationStepName = Navegación

	annotation PBI_ResultType = Table

